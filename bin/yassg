#!/usr/bin/env node

/* Copyright 2012 by Stefan Matthias Aust. All rights reserved. */

var fs = require('fs'), path = require('path');

function usage(){
  console.log("usage: yassg new <directory>  - create a new site")
  console.log("       yassg watch [<port>]   - development mode")
  console.log("       yassg build [<output>] - generate the site")
  process.exit(1);
}

function newSite(dir){
  if (!dir){
    usage();
  }
  console.log("create new site", dir, "...");
  if (dir){
    mkdir(dir);
  }
  mkdir(join(dir, "layouts"));
  mkdir(join(dir, "pages"));
  mkdir(join(dir, "properties"));
  mkdir(join(dir, "static"));
  write(join(dir, "layouts", "default.html"),
    "<html>\n"+
    "  <head>\n"+
    "    <link rel='stylesheet' href='style.css'>\n"+
    "    <title>{{title}}</title>\n"+
    "  </head>\n"+
    "  <body>\n"+
    "    {{{content}}}\n"+
    "    <div id='footer'>&copy;{{site.settings.copyright}}</div>\n"+
    "  </body>\n"+
    "</html>");
  write(join(dir, "pages", "index.mdown"),
    "---\n"+
    "layout: default\n"+
    "title: Homepage\n"+
    "---\n"+
    "Welcome to **Yassg**!\n"+
    "\n"+
    "{{#site.pages}}\n"+
    " * {{name}}\n"+
    "{{/site.pages}}");
  write(join(dir, "properties", "settings.yaml"),
    "---\n"+
    "copyright: 2012");
  write(join(dir, "static", "style.css"),
    "#footer { margin-top:20px; padding-top:10px; border-top:1px solid #DDD; }");
  console.log("done");
  
  function join(){
    return path.join.apply(this, arguments);
  }
  
  function mkdir(path){
    if (!fs.existsSync(path)) fs.mkdirSync(path);
  }
  
  function write(path, s){
    console.log(" create", path);
    fs.writeFileSync(path, s, 'utf8');
  }
}

function watchSite(port){
  port = Number(port) || 3000;
  console.log("Running server on localhost:" + port);
  require(__dirname + "/../index").run(port);
}

function buildSite(dir){
  dir = dir || "built";
  console.log("Building site to", dir);
  require(__dirname + "/../index").build(dir);
}

if (process.argv.length < 3) usage();

switch (process.argv[2]){
  case 'new': newSite(process.argv[3]); break;
  case 'watch': watchSite(process.argv[3]); break;
  case 'build': buildSite(process.argv[3]); break;
  default: usage();
}